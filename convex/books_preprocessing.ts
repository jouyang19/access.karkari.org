import { mutation, query, action } from "./_generated/server";
import { api } from "./_generated/api";
import { ConvexError } from "convex/values";
import fetch from "node-fetch";

export const getAll = query({
  args: {},
  handler: async (ctx) => {
    return await ctx.db.query("books_preprocessing").collect();
  },
});

// List of storage IDs
const storageIds = [
  "kg25q5mx0sw5e1ej178ar0efp96xp2aq",
  "kg2e1vjg511rh2pb7xqx3750w16xqjd1",
  "kg24ft5sqfp2r8p6wvnca68n096xpc4z",
  "kg2er63fzbk301g8zfxjsanftn6xqaa3",
  "kg2f4617t4mb035e8a9b04zfbd6xpfar",
  "kg2f1cfk010jyw3px8ffeffybx6xpjs3",
  "kg2bnh4jfcw3s3dtvq5j18dkxn6xp5sn",
  "kg2c20rs5c639ftx4mrt98wzys6xpqq6",
  "kg22s489j2128j6ty6eqebrphh6xqf30",
  "kg26t4szwzskz9a27dc8979y056xpygc",
  "kg2bxzwm52xqk87csyk4mzmzfx6xpq2j",
  "kg2cygmfcrvdxxmxmb9g7e8kk16xpmaa",
  "kg217tyrh3af36cng396janbd16xp4ea",
  "kg247w96b54qsjzjdk9xabj9zh6xq17a",
  "kg22apfx5b12pqhva0txqmdnah6xpbet",
  "kg24bz533zr7qt7jprkqf745hx6xp55n",
  "kg26ph46h76jfjwgbk464dvkad6xpp39",
  "kg2b3eet1w947q4jfkgxsgfb456xqs5x",
  "kg29speeacwpxfahqcrbwwv5t96xpsh9",
  "kg2bctxj5w81khjncv9ev3qqq96xpwjd",
  "kg2425tm5478gf7w77xa7yxwad6xpjxv",
  "kg27qa7jmf9d0g9sxbrfctnhx56xpw24",
  "kg2425pmgmekf4a6h8dvhykh9h6xqds4",
  "kg22w1chx4dhemp8pzk5z4e57d6xpkqj",
  "kg24wmnj3j89kpp00nmxr03xm96xprh7",
  "kg2581sqahp815bfzeaygd9kwn6xpry8",
  "kg26f8my3t14dh5gqph5sr26zn6xq9x8",
  "kg22zawex1vb2w5cj39wqgmsfx6xprvk",
  "kg2fvd8821dmafft3acx98fsbs6xqt6x",
  "kg26arzegxg49x0x194q59nk9d6xp8wc",
  "kg2dgapf256nf3e0725j404hrs6xqnv0",
  "kg2a2z0vvk41k4xpc444v662vd6xqwf1",
  "kg2b86tes7c1h9cde143edqx8n6xpds1",
  "kg22k8nj76pw7pfgk97ps0est16xpdn1",
  "kg2epfasj367p3y02n4a2bcq8s6xqxy6",
  "kg259f1h946522wx3s2w6wbtz56xpre3",
  "kg2atkv61tt90k4n0w2ks3n2v56xqbpx",
  "kg23jth0sm53w513hcbdkdb5zd6xpspv",
  "kg28zg9sfm8e3pj83x05am3tsn6xpb3k",
  "kg27b1v74ecmprbrgxrvx95s8n6xprv4",
  "kg27882767e633cb206pc6kbt96xp0zk",
  "kg2d8rf1xm1n9mg48a0cm3sdjh6xpn0p",
  "kg27hwfqtrd324aej43a7tb5rx6xqxv5",
  "kg21d0017ytbm27zvwkgy61q3h6xq4wj",
  "kg23x03ggj48fyqmt8f914s24s6xqmg5",
  "kg2fase6cjnsfkhgj6batnw7hx6xqk9x",
  "kg2dekr2xevejhttncse3y48rs6xp7we",
  "kg26xgaf14w9ndbasqehgrt6sn6xpy12",
  "kg2f3as63v5ehxjq4bdjec0tes6xq2sc",
  "kg22agp82ze2c8p167kh8t9npx6xpx30",
  "kg27a0c7v95qbq08ktxw7v1z8s6xqm7r",
  "kg275q96adspepxfawddtqrx7d6xpy9h",
  "kg23ckhpe2hkfr3dhwrdd0a5gh6xqy6e",
  "kg2cqdd39z83prtw89cp843xzn6xq3ay",
  "kg234mbg8a0j0531yhp5573heh6xphjk",
  "kg25w2xgrsxgp98jwdtzwwpccx6xpqrk",
  "kg28kzjse618ccrbw47g7nwhtd6xq3bc",
  "kg2d8r821dejtpdtj0xdjw1x8d6xpenk",
  "kg27bwb2stj6r2smfbq2ptnapn6xp2dn",
  "kg2ejfhz39rteqh1atgs5wyx1n6xphej",
  "kg290tz8r0a4b12jas954c5ygx6xp2de",
  "kg2csjq27atcc0n1bcsswa01sn6xqeb8",
  "kg263915qy9660dq8x1mtn03a56xqq96",
  "kg2271d45gann1sbyrzarc2rrh6xq3c9",
  "kg22jr8g900mc4wvash8tg6cx96xqpmh",
  "kg27t4wkwxcw0c5568daa2zeg96xpb0n",
  "kg234zenqt0ttx5nmq5nv56mz96xq46n",
  "kg28s1zqzya1pphdyp51st6z8s6xqbzd",
  "kg29412m4ksvqv5wpc2mz6zq9s6xp4rw",
  "kg215d7p634gckq4k06maahgax6xpm2f",
  "kg24xt26ydfcvd7j24vetezdfn6xqrfq",
  "kg2dqfcc29tx95714kvmkzzyyd6xp45j",
  "kg2c4wymy90f5ab2nwdxf70fn96xqxk7",
  "kg2b04d3bhgn5738rg7b7j0hyx6xq56x",
  "kg257gzeebfbw7sv1aazzvt3796xpfns",
  "kg2dqfythm8mzxpdexwg6axtxd6xqbt2",
  "kg236mves282b03mzrsfpbtngn6xprak",
  "kg2f143zbk3jg74j1h4y705cps6xqpg8",
  "kg24aq3d4jtf59crxmfr0b9sbx6xpbqj",
  "kg23c1n79vys3134jz68r8shcx6xp6c2",
  "kg24s9q1r6e40apa90r4nen4gn6xqm91",
  "kg29dknt2we23h5h35cb24qve16xpkg2",
  "kg250tyr69se8g173gsndwvctn6xp8wa",
  "kg2c85hzc1fd552c7nsq00r45n6xq9e2",
  "kg22txmttkvscx61pwr1p5yms16xpm5q",
  "kg2ej51jan37g9w1x4mww9ersn6xpq5m",
  "kg21f7z67evscgf8sr0ksk93sh6xqq4d",
  "kg22a2v8b8fz8av557yqdqhrgd6xq4p9",
  "kg22bdnp0bxbkr0xfwhwaafg2s6xq8c3",
  "kg2ck31mt1q49k213h69h45frs6xqscm",
  "kg269k7wr8rz4brzfx2r3st8k16xpcvj",
  "kg22ymqtvn3t3ec67mk70br9rx6xp6bs",
  "kg248f14x8zv6fw73h48qhq5296xqeqb",
  "kg2ccw8421m500x4a3q7kxgqz56xpbyq",
  "kg2a51qnfqgfqtdrnkw5ktpng16xp6q9",
  "kg27mpp72prf7yv5852r3cf93x6xpezx",
  "kg2bv7tcte1pn5rbwngxw6wwkd6xpj3q",
  "kg2168fpe0dhkrx4jdyd94akys6xqpq4",
  "kg217x4tfqygyhraxwf9yz3s456xp1aa",
  "kg2epwaxn21nndn5e6sxk3p65d6xqqbb",
  "kg26ncfzpcwvxnfpwbyq5c9n6n6xqgrp",
  "kg2chdwn3ga3hmgr3b5yhavxax6xpyqx",
  "kg283ne66k95xhcn3rjx5w3t016xp8fw",
  "kg21naxja23ygpyfwb9rqe2y496xq86g",
  "kg2b7j351keh8gasc3b7d32p2s6xqrwj",
  "kg20mjzefnwftkasa5jk6qn5cd6xqwp5",
  "kg2ab81nvks8qv8nj5gefeatmh6xpb26",
  "kg26ya5bg5e1y7087gdfqxyynn6xqzdf",
  "kg26k4er0mrw6f8q7tyx873h316xpptt",
  "kg2f49gggt7ab14dbs48tn8c0s6xpn5p",
  "kg29p4fbzjf7jnas6y2vq3bdkn6xpbgx",
  "kg259h6yj1pdf5v032efx31xsh6xqkw0",
  "kg2fkj0v0fr0f4s17kdk0q86mn6xq8f3",
  "kg22rcx4q9xfdxkf4mtx72y9gs6xprcz",
  "kg2by9r00paxnpgttetfx4wtdh6xpd7p",
  "kg22c1sm9s0nr118zetp0gbqed6xpytx",
  "kg2dbwa5tty20c9b233catna716xqj2b",
  "kg2321g8pd7c27sysmf4n7zp3s6xp3hw",
  "kg2fdywjhp9hswqp9gjfwrznnh6xqr9m",
  "kg26fsy9a16fa4tczbrqa6f6056xpbvp",
  "kg2amty4vrfcy23nw9w3a2a1616xqwn5",
  "kg24qvcsq2pr7ab814bp11qh996xqmv2",
  "kg28xd7thaph9xwr9jk98r27f96xq1cd",
  "kg25yrcz7wn843gznxyfq02dvd6xp3b9",
  "kg29tgjf6xwfqgskygap7k9n356xp7fk",
  "kg25nrh185jqmc0sbm9wt2ka716xpxs2",
  "kg231w056mtjprk9fbshqqxhvh6xpgaw",
  "kg2eesw2c44e4fg6bpm1w8tcps6xpvs0",
  "kg28av59bta7herph9ef1hxf7h6xp9ac",
  "kg2dnwjyk85fycejrvczad08296xpyk5",
  "kg22dgnrz3xsy65zdgj6b89pk56xpdps",
  "kg29anhnh7kxyeadvca51tnd9n6xqr5f",
  "kg289hmmqzfjq6qk7gj93htax16xqshq",
  "kg2c7fh6ap15nmngv27cjgqhx96xpvq6",
  "kg21amk47fe7eej75da59sq5116xpj1w",
  "kg27kwfc9ckjmx1ecyfpj12npx6xqpvk",
  "kg26wey79p960pfs7azy5mw5196xp1na",
  "kg20y91jhj1e9at4tnyq5gzx8x6xqpf2",
  "kg2cf6dpm8f849nprc1p9jyjqn6xq011",
  "kg25wqqrf59vq3d8wb0abtr3x56xpnnb",
  "kg27p21vg9jmmbwjgr7097gya56xp7dt",
  "kg2ah4mnq852a65f1vttazaem96xpq0d",
  "kg26whsqjvftarybmsk86t8xas6xpsvn",
  "kg2fesz03qndtzd58fkr7ca90x6xqehj",
  "kg26fybcwn9zhn7b4yk7ntqjkh6xpgh4",
  "kg24vb9zcx6d1fngeqeh38djb96xp0m1",
  "kg26dkn98r83028dw56j6x1ges6xqb79",
  "kg21gs2ewqaaz4bcsz2phz6wx96xqda2",
  "kg2921pzqd1kk0465zjgk5k5e96xp1f2",
  "kg2eg8qh5rp7rr7w500nw60a4d6xqg9q",
  "kg2fseap775kq8w1brv743fdxh6xp8n4",
  "kg2cqpj87y90xm8pkhf6sbjw8d6xpbj5",
  "kg2atvayy2z6rc08fw51pt4cdd6xq5a5",
  "kg2ca9djrp94v1s4da0fchce896xqa45",
  "kg25byc37wdq29v64ggb8rnp8n6xphqs",
  "kg264y1b7f2m5y8bzmq0wz4zf16xqqsf",
  "kg232vvpbccnh5myhvzan98rn56xpyn5",
  "kg26szrpeabq7dgd4mp98tmgz16xpqr4",
  "kg2dayjwmd1nq1sn19gs2y29xd6xp620",
  "kg2576j37akgq9cyc3c3snxfhh6xqbdk",
  "kg28c3m0mcgb4bpt2k3fd7cmdd6xqh9p",
  "kg259jfyh9ee4brbtbejrehrfs6xqc7w",
  "kg293pst0hb7b1cr6nht5az8q56xqr6t",
  "kg20a74ad79ak2wac8an13txhx6xqbjr",
  "kg28s8fk7yf9eex3x4q56xt8td6xpdnk",
  "kg20mx0btsnm73zg8zwrg3w5cx6xp5tb",
  "kg28fn8fqn7zd935pvdhk7zr216xq3xg",
  "kg268vmdccr4jjbggp95weqbq96xp453",
  "kg214sv4xs46gs10qn5m5s9mfd6xq9c3",
  "kg209g0kw15e0mc8byyk7dbm3d6xp5d4",
  "kg2f3ngb44pe3ey6c919f97wmd6xqhr6",
  "kg222e119gqd1hr456hrx06b196xp1mg",
  "kg21rnevf5g6atnz3jzpbgzxys6xpwas",
  "kg2dt4jtt86fd3vr3qbc9t41ms6xqcqd",
  "kg24ct25aq3w73jkj2tkcr6t716xpt0k",
  "kg2aq2abhkvqe0ftpmgfsfqsx56xqbf8",
  "kg25zwaqvmxf2pshn3rfwh5k2d6xq8sj",
  "kg2avmnnjmvf6c3feczvwjydps6xq5wr",
  "kg20qx0x2agp4y29f9rzysm22h6xq82k",
  "kg2c418m3mveptfr6p54pj2rv16xqh50",
  "kg23q2pxb59wkmfcfbamvdswjd6xqfnw",
  "kg291c729zdt8rm619em6q5jtd6xpaxm",
  "kg23h35fp1mpkqz8xgzbnxz17s6xpznk",
  "kg23t072xbertvngxbf0xjnav56xpz41",
  "kg24hmg9hb19pn758fgw9k1af56xprqv",
  "kg2fpwjv00d5fhccan7wvt1h996xp9k5",
  "kg28jznb1cs2zwax7czk57wmkn6xqc4q",
  "kg28v39ht1xntnmcmcg14mqy9s6xp47d",
  "kg21j2y2wbdmg327nrvcy4vmr16xp042",
  "kg2ahzb29xjqgqtdd2af52wr9x6xp1xe",
  "kg29gjxjtgemnb64eqpyt9z9k56xp00z",
  "kg2fg3bbprzhvak127nh35sdtn6xqyyd",
  "kg2fcggcqrz6bwbwhtggskrww56xqrbz",
  "kg2esc9rt1kx57qvv8set29kh96xqzmw",
  "kg225rnc520n7hb8navhx5jrr96xqm0f",
  "kg2c01zpskzm69w43v1ka22ta56xp1zf",
  "kg27sqmrmhz6eehnw7gm9s0fzs6xqafy",
  "kg264t1pyad68t34re507yqnp56xpx7r",
  "kg2amhkqwg8q6nfxvkvzwn3fbs6xqpw4",
  "kg2dv4k4wajrx4s8msnq03ajts6xp8e5",
  "kg20sks80vrdb8w38xmer4ds3d6xpf4j",
  "kg217xtgy67sy340zv070x2zf16xphkg",
  "kg2e3y59ed72cnsqm8gaq7cfkh6xqx0g",
  "kg29kxzzpm77t9ztgdmtx7rt416xpas2",
  "kg2fs6zfjk12nxmsqs4ygs58js6xqvnm",
  "kg20f3gbtmqqdjs1a5chfqxpyn6xp6ee",
  "kg2dew9r18qtgvszkweqkaptsd6xppzz",
];

export const generateFileUrls = mutation({
  args: {},
  handler: async (ctx) => {
    const results = [];

    for (const storageId of storageIds) {
      // Generate the file URL
      const fileUrl = await ctx.storage.getUrl(storageId);

      // Store the file URL in the books_preprocessing table
      const documentId = await ctx.db.insert("books_preprocessing", {
        storageId,
        fileUrl,
      });

      results.push({ storageId, fileUrl, documentId });
    }

    return results;
  },
});
